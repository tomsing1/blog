{
  "hash": "9de5908b8c071c054299ab0e1b62257c",
  "result": {
    "markdown": "---\ntitle: \"Figure size, layout & tabsets with Quarto\"\nauthor: \"Thomas Sandmann\"\ndate: \"2022-12-22\"\nfreeze: true\ncategories: [TIL, R, quarto]\neditor: \n  markdown: \n    wrap: 72\n---\n\n\nIn this document, I am experimenting with various attributes\nthat organize the layout, size and placement of figures of\nQuarto document. For more details, please check out the\n[official documentation](https://quarto.org/docs/guide/),\nespecially the topics on \n[figures](https://quarto.org/docs/authoring/figures.html)\nand\n[article layout](https://quarto.org/docs/authoring/article-layout.html).\n\n::: {.callout-note}\n\nFor illustration, I am displaying both the code that generates \na simple plot as well as the attributes that determine how\nit is rendered, e.g. the `:::` tags interspersed with the\ncode blocks, and the `#|` attributes within individual\ncode cells. See the documentation on \n[executable blocks](https://quarto.org/docs/output-formats/html-code.html#executable-blocks)\nfor details.\n:::\n\nFirst, let's generate a simple plot, so we can see the effect of different\nattributes on how it is rendered in subsequent code cells.\n\nTo start, we render the output without specifying any custom attributes, e.g.\nusing the default settings for this Quarto website:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ntheme_set(theme_linedraw(base_size = 14))\np <- ggplot(mtcars, aes(x = mpg, y = drat)) + \n  geom_point(color = \"skyblue\", size = 3, alpha = 0.7) +\n  geom_smooth(method = \"lm\", formula = 'y ~ x', se = FALSE) +\n  theme(panel.grid = element_blank())\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n### Width and height of individual figures\n\nThe `fig-width` and `fig-height` attributes specify the \ndimensions of the image file that is generated. The `out-width` attribute determines the size at which that\nimage is displayed in the rendered HTML page.\n\n```\n#| fig-width: 4\n#| fig-height: 5\n#| out-width: \"50%\"\n#| fig-align: \"center\"\n```\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\nFor example, the same image can be displayed at 50% of the\nwidth of the enclosing `<div>`.\n\n```\n#| fig-width: 4\n#| fig-height: 5\n#| out-width: \"25%\"\n#| fig-align: \"center\"\n```\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=25%}\n:::\n:::\n\n\n### Layout: columns and rows\n\nThe `layout-ncol` and `layout-nrow` attributes govern the placement \nof multiple figures within the same element. For example, we\ncan place two figures next to each other, in two column. \n\nThe `fig-align` attributes specify the figure alignment within each column. \n\n::: {.callout-tip}\nThe `out-width` attribute is always relative to its\nenclosing element, e.g. here `out-width: \"50%\"` refers to\nhalf of the width of a *column*, not the page width. \n:::\n\n```\n::: {layout-ncol=2}\n```\n\n::: {layout-ncol=2}\n\n```\n#| out-width: \"50%\"\n#| fig-align: \"center\"\n```\n\n```\n#| out-width: \"30%\"\n#| fig-align: \"right\"\n```\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=50%}\n:::\n:::\n\n::: {.cell layout-align=\"right\"}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='right' width=30%}\n:::\n:::\n\n\n:::\n\n```\n:::\n```\n\n### Tabsets\n\n[Tabsets](https://bookdown.org/yihui/rmarkdown-cookbook/html-tabs.html) \ncan be used to organize contents, e.g. by hiding content\nuntil the other clicks on the tab's header.\n\nThe layout of the first tabset contains just one column and \nrow. \n\n```\n::: {.panel-tabset}\n```\n\n::: {.panel-tabset}\n\n### panel 1\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\n### panel 2\n\nThe second panel is subdivided into two columns. (Note the \nuse of the `::::` tag, nested within the `:::` parent tag.)\n\n```\n:::: {layout-ncol=2}\n```\n:::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n```\n::::\n```\n\n::::\n:::\n\n```\n:::\n```",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}