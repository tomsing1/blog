{
  "hash": "2d0ad352bb4b305eb27a25d4b3961eca",
  "result": {
    "markdown": "---\ntitle: \"Embedding R into Quarto documents with quarto-webr\"\nsubtitle: \"Example: intersecting differential expression results\"\nauthor: \"Thomas Sandmann\"\ndate: '2023/11/18'\nformat: html\nengine: knitr\nwebr: \n  show-startup-message: true\n  packages: ['ggvenn', 'huxtable']\n  channel-type: \"post-message\"\nfilters:\n  - webr\neditor_options: \n  chunk_output_type: console\n---\n\n\n```{webr-r}\n#| context: setup\nkUrlRoot <- paste0(\n  \"https://tomsing1.github.io/blog/posts/quarto-webr\"\n)\nkResults <- c(\n  \"Day1\" = \"day1_results\",\n  \"Day2\" = \"day2_results\",\n  \"Day3\" = \"day3_results\"\n  )\nresults <- lapply(kResults, \\(result) {\n  url <- paste(kUrlRoot, paste0(result, \".csv\"), sep = \"/\")\n  download.file(url, basename(url))\n  read.csv(basename(url))[, c(\"gene_name\", \"adj.P.Val\", \"logFC\")]\n})\nnames(results) <- names(kResults)\n\n# keep only genes present in all results\nkeep <- Reduce(intersect, lapply(results, \\(x) x$gene_name))\nresults <- lapply(results, \\(result) result[result$gene_name %in% keep, ])\n\n# Helper function to apply an FDR cutoff to a list of dataframes\napply_fdr <- function(x, fdr_cutoff = 0.01){\n  lapply(x, function(df){\n    df[df$adj.P.Val < fdr_cutoff, ]$gene_name\n  })\n}\n```\n  \n## Introduction\n\nThis interactive website allows users to intersect differential expression\nresults of three different comparisons from an experiment published by \n[Xia et al](https://www.biorxiv.org/content/10.1101/2021.01.19.426731v1).\n\nThe experiment was performed in three different batches (e.g. samples were\ncollected on three different days). For this report, the differences\nbetween samples from homozygous APP-SAA and wiltdype animals were estimated\n_separately_ for each batch/day: `Day 1`, `Day 2` and `Day 3`.[^1]\n\n[^1]: Analyzing each batch separately is _not_ the best way to estimate genotype\neffects across the full experiment. For this exercise, I just want to obtain\nthree different contrasts to compare in a Venn diagram. You can find more\ndetails about a more realistic analysis of this experiment in \n[this blog post](https://tomsing1.github.io/blog/posts/nextflow-core-quantseq-3-xia/).\n\nBy manipulating the code cells include in this website, you can select\na set of genes that passes a user-defined FDR threshold on all three days.[^2]\n\n[^2]: The FDR does not reveal the direction of differential expression. So it\nis possible that we will pick up genes that are statistically significantly\ndifferentially expressed in _opposite directions_.\n\n## Step 1: Choose a false-discovery (FDR) threshold \n\n1. Please choose an FDR threshold by changing the `FDR_threshold` the code\n  box below.\n  \n  - It will be applied to results from all three comparisons.\n  - For example, setting `FDR_threshold < 0.1` will retain all genes with a\n    false-discovery rate < 10% in _all three experiments_.\n\n2. Press the \"Run Code\" button to create a Venn diagram.\n\n  - You can save the plot by right-clicking and selecting `Save image as`.\n  \n3. Repeat until you like the results.\n\n```{webr-r}\n#| context: interactive\nFDR_threshold <- 0.1\nfiltered <- apply_fdr(results, FDR_threshold)\nggvenn(filtered)\nselected <- sort(Reduce(intersect, filtered))\n```\n\n## Step 2: List the genes that pass the FDR threshold in all three comparisons\n\nNext, press the `Run Code` button to see the list of genes that pass your \nselected FDR threshold.\n\n- If you triple-click on the list of gene symbols, you can copy them into\n  another document.\n\n```{webr-r}\n#| context: interactive\npaste(selected, collapse = \", \")\n```\n\n### Step 3: See the differential expression results for the selected genes\n\nFor more context, the following sections show you tables with the results\nfrom your three experiments for the genes you selected in Step 1.\n\n## Day 1\n\nHit `Run Code` button to see the expression of the selected genes \nor download [results for all genes](https://tomsing1.github.io/blog/posts/quarto-webr/day1_results.csv.gz)\n\n```{webr-r}\n#| context: interactive\nresults[[\"Day1\"]][match(selected, results[[\"Day1\"]]$gene_name), ] |>\n  huxtable::hux()\n```\n\n### Day 2\n\nHit `Run Code` button to see the expression of the selected genes \nor download [results for all genes](https://tomsing1.github.io/blog/posts/quarto-webr/day2_results.csv.gz)\n\n```{webr-r}\n#| context: interactive\nresults[[\"Day2\"]][match(selected, results[[\"Day2\"]]$gene_name), ] |>\n  huxtable::hux()\n```\n\n### Day 3\n\nHit `Run Code` button to see the expression of the selected genes \nor download [results for all genes](https://tomsing1.github.io/blog/posts/quarto-webr/day3_results.csv.gz)\n\n```{webr-r}\n#| context: interactive\nresults[[\"Day3\"]][match(selected, results[[\"Day3\"]]$gene_name), ] |>\n  huxtable::hux()\n```\n\n```{webr-r}\n#| context: interactive\nsessionInfo()\n```\n",
    "supporting": [
      "quarto_webr_example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}